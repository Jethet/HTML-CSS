COMMENTS IN CSS: use /*place your comments here*/

CSS defines the visual representation of the content of a website, such as
colour, margins, borders, backgrounds and positions in the page. CSS is the
presentation of the website, where HTML is the structure.

Selector: element
example of CSS rule:
body {
  color: xxxx;
}
'body' is the selector, 'color' is the property and 'xxx' is the value:
general code is
selector {
  property: value;
  property: value;
  property: value;
  ( ... etc. ...)
}

A group of properties for a given selector is always defined within the curly
braces, as shown above.

Text decoration includes underline, overline and line-through.

Selector: class
A class selector selects all elements that use the specified class. This can be
.my-picture or .title.

Pseudo classes: a keyword added to a selector.
A pseudo class specifies a special state of the element to be selected, for
example 'hover' to turn a button blue when the cursor hovers over it.

Selector: id
The id selector selects the element with the id. There can be only one
element with a particular id.

Selector: nested elements
This selects all elements of a type that are nested within a class

Using element selectors the style is ensured for all elements of that type:
h1 style for all headings of size 1, etc.

RESET styles to avoid browser inconsistencies:
html, body, div, h1, h2, h3, h4, h5, h6, p, a, img, small, b, i, ol, ul, li {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline;
}

DISPLAY The display property specifies the display behaviour (the type of rendering
box) of an element. In HTML, the default display property value is taken from the
HTML specifications or from the browser/user default style sheet.
INLINE and BLOCK ELEMENTS are the most common ways to display elements.

- block: elements appear on a new line (also called block-level element)
  <div> is the standard block-level element: starts on a new line and stretches
  out to the left and right as far as it can.
  <p>, <form>, <header>, <footer>, <section>, <h1>, <ul>, <li> etc. are also
  block-level elements.

- inline: elements appear on the same underline
  An inline element can wrap some text inside a paragraph: <span>sometext</span>
  without disrupting the flow of that paragraph.
  Examples of inline elements are <img>, <a> (most common because used for links),
  <em>, <strong> and <span>.

INLINE-BLOCK is a display element that is used instead of INLINE when the div
contains a class that is a block element (such as <h1>) that takes over.
NONE is also a display value: hide and show elements without really deleting
and recreating them. The page is rendered as though the element does not exist,
in contrast to 'visibility: hidden' where the element is hidden but still takes
up the space it would have if visible.

MAX-WIDTH: using 'max-width: xxxpx' instead of 'width' when preventing a block-level
element from stretching out to the edges of the container, the web page is usable on
small screens: you can resize the page. The width of the block-level element is set
and with 'margin: 0 auto;' the element will centre horizontally in the container:
the remaining space will be split evenly between the two margins.

FLOATING ELEMENTS
A floating elements stands as far to the left or right of their container
element as possible. Other elements, such as paragraphs or Lists, wrap around
the floating element. To ensure an element floats, its width must always be
specified (otherwise it takes the width of the entire page).
Floating properties:
float: right  --> float to the right of the page
float: left   --> float to the left of the page
float: inherit --> inherit the value of the parent element
float: none   --> do not float

BOX MODEL: an element can be seen as a box. The box model describes the
stacking of spatial properties of an element: what effects its size and
spacing on the page. These are padding, margin, border, height and width.

PADDING AND MARGIN
Padding and margin can be set in a number of ways:
padding: top right bottom left  --> padding: 10px 20px 30px 5px
padding: top right/left bottom  --> padding: 10px 20px 5px
padding: top/bottom right/left  --> padding: 5px 15px
padding: all  --> padding: 20px
You can also set one specific padding: padding-right
All of this also applies to MARGIN.

To keep the box from becoming bigger with padding and borders, use BOX-SIZING.
With 'box-sizing: border-box;' the padding and border no longer increase the
width of a box. This is a very recent technique and should be used together
with '-webkit' and '-moz' prefix to be used in specific browsers. Use as follows:
-webkit-box-sizing: border-box;
   -mox-box-sizing: border-box;
        box-sizing: border-box;

PSEUDO CLASS
A pseudo class is a keyword added to selectors to specify a special STATE. In
this way, different styling can be specified for different states of a link:
a:link
a:visited
a:hover
a:active
This ORDER should be followed to apply different styling for all of the states.

It is possible to define COMMON STYLES for different CSS classes by comma-separating
them:
.portrait, .title {
  display: inline-block;
}

POSITIONING
Default position HTML elements is STATIC i.e. positioned within the normal flow
of the page, ignoring any top/bottom/left/right properties defined in CSS.
Inline boxes flow from left to right and block boxes from top to bottom.
When an element has position RELATIVE it is no longer in the normal flow and can
be moved to top/bottom/right/left. It can be used in conjunction with ABSOLUTE
positioning.
With a FIXED position, an element is relative to the viewport of the browser
window. As the viewport does not change when the window is scrolled, the element
always appears to be at the same place.

Z-INDEX: the z-index controls how content overlaps. The element with the highest
z-index appears on top.
