-  comments that should be ignored in HTML code:
   Use special tag to add notes that will be ignored:
     <!-- Note to self: xxx xxx -->
- meta data is not rendered but used by the server (for example: description and
  keywords are giving information that will be used by Google)

WEBPAGE STRUCTURE
-  doctype needs to be defined first in an HTML page: it tells the
   browser which version of HTML the page is using. The code is:
      <!DOCTYPE html>
      <html>
      </html>

-  head and body tags:
   a HTML page is split into two parts, head and body. The head contains
   important webpage information (title, stylesheet, script, font etc.).
   The head is the name of the website for search engines.
   The body contains the webpage content that is visible to the user.
   The code is:
     <head>
        <title>THIS IS THE TITLE</title>
        ... etc.
     </head>
     <body>
     </body>
  NB: the links to the css stylesheets should come first, above the title.
  The styles.css link should be the last one you add. To start with a good
  layout without default values, include <link rel="stylesheet" href="reset.css">

-  footer: will be repeated for each page

-  container: SECTION this is where the main content is specified, after the header.

-  elements have an opening and a closing tag, plus content. The following are
   all elements:

      heading:
      There are 6 sizes for headings. The code is:
      <h1></h1>
      <h2></h2>
      etc.
      h1 defines the largest (= most important) heading and h6 the smallest.

      paragraph:
      Use <p> to put content into paragraphs. It will break up your text and
      make it easier to read for the user. Code (after code for header): <p></p>

      link:
      A link lets the user click through to another webpage. The attribute
      <a>href</a> is an anchor tag that contains the URL address of the link: it is
      used to indicate where the user should go:
      <a href="https://..url and page of website..">..description reference..</a>

         ==> target is an anchor tag attribute that specifies where to open the
             link and the value "_blank" specifies to open the link in a new tab:
             <a target="_blank" href="http://freecodecamp.org">Freecodecamp.org</a>

      div (= division element):
      The div is a general purpose container for other elements.
      A div tag groups elements together. This is useful for styling (e.g.
      giving the grouped elements the same colour). Code to wrap around elements:
      <div></div>

      ul: unordered list with bullets, and ol: ordered list with numbers
      To be used with list items <li>. The code example is:
       <ol>
         <li>item 1</li>
         <li>item 2</li>
         etc.
       </ol>

      button:
      You can use radio buttons for questions where you want the user to only give
      you one answer out of multiple options. Radio buttons are a type of input.
      Each of the radio buttons can be nested within its own label element.
      By wrapping an input element inside of a label element it will automatically
      associate the radio button input with the label element surrounding it.

      All related radio buttons should have the same name attribute to create a
      radio button group. By creating a radio group, selecting any single radio
      button will automatically deselect the other buttons within the same group
      ensuring only one answer is provided by the user.

   It is considered best practice to set a for attribute on the label element,
   with a value that matches the value of the id attribute of the input element.
   This allows assistive technologies to create a linked relationship between
   the label and the child input element.

-  Checkboxes:
   Forms commonly use checkboxes for questions that may have more than one answer.
   Checkboxes are a type of input. Each of the checkboxes can be nested within its
   own label element. By wrapping an input element inside of a label element it
   will automatically associate the checkbox input with the label element surrounding
   it. All related checkbox inputs should have the same name attribute.

   It is considered best practice to explicitly define the relationship between
   a checkbox input and its corresponding label by setting the for attribute on
   the label element to match the id attribute of the associated input element.

- <pre></pre> all that is within these tags is respected: in this way empty
  lines can be created, for example.

-  Image
   There should be a folder for images in the project folder. The images can
   be downloaded by right clicking on a link and select 'Save as ...', and
   save the images to the image folder.
   Images have three primary attributes:
   * the <img> tag
   * the src attribute that lets the page know what image the user wants to see
   * the alt attribute that provides extra information if the image cannot be
     seen on the webpage for any reason (name image??)
   To see the image on the webpage, the image needs to be linked by telling
   the webpage where the image is and what it is called. Code:
    <div>
      <img src="images/logo.png" alt="codebar.io">
    </div>

   It is possible to link to a video and combine this with pictures.
   First the link to the video should be added (with code <a href="">) and
   images of pictures can be added under this (small indent).

-  formatting:
   to emphasise text: use <em>
   to format text as important: use <strong>
   to format text small: use <small>

-  mailto link:
   A link can open up a user's email client and share content. The difference
   between regular links and mailto links is the content defined in the href
   attribute. Code:
    <a href="mailto:social&codebar.io?subject=I%20love%20owls%20::%20codebar">Email us</a>
   Note: spaces in the subject text are replaced by %20.

-  Twitter link:
   A share-on-Twitter link can be added as follows:
   <a href="https://twitter.com/home?status=I love owls! via @codebar">
      Share your love of owls on Twitter</a>

RESPONSIVE LAYOUT:
<meta name="viewport" content="width=device-width, initial-scale=1.0"> (after css links)
The mobile-first approach is a way to design with consideration for the restrictions
posed by mobile phones: focus on core content and functionality, consider bandwidth.
There is a hierarchy of content, for example:
1 - site name
2 - content text
3 - resources
4 - author info

SPLIT LINES OF HTML CODE:
<code><other_code
params=...>

Attributes: key="value" syntax, such as class="", id="", src="", style=""
An id is unique in the context of a web page and cannot be duplicated.
A class can appear multiple times and hold multiple values.
